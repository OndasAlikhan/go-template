basePath: /api/v1
definitions:
  dto.JSONResult:
    properties:
      data: {}
      message:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        maxLength: 125
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.PermissionResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
    type: object
  dto.PermissionStoreRequest:
    properties:
      name:
        maxLength: 125
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.PermissionUpdateRequest:
    properties:
      name:
        maxLength: 125
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.RoleAddPermissionsRequest:
    properties:
      permissions_id:
        items:
          type: integer
        type: array
    required:
    - permissions_id
    type: object
  dto.RoleRemovePermissionsRequest:
    properties:
      permissions_id:
        items:
          type: integer
        type: array
    required:
    - permissions_id
    type: object
  dto.RoleResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
    type: object
  dto.RoleStoreRequest:
    properties:
      name:
        maxLength: 125
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.RoleUpdateRequest:
    properties:
      name:
        maxLength: 125
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.UserResponse:
    properties:
      created_at:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.UserStoreRequest:
    properties:
      email:
        maxLength: 125
        type: string
      name:
        maxLength: 125
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.UserUpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
host: localhost:8081
info:
  contact: {}
  description: Auth service docs
  title: Auth service
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
      tags:
      - auth
  /me:
    get:
      consumes:
      - application/json
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - auth
  /permissions:
    get:
      consumes:
      - application/json
      description: List of permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.PermissionResponse'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - permission
    post:
      consumes:
      - application/json
      description: Create a permission
      parameters:
      - description: Permission store request
        in: body
        name: permissionStoreRequest
        required: true
        schema:
          $ref: '#/definitions/dto.PermissionStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.PermissionResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - permission
  /permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JSONResult'
      security:
      - ApiKeyAuth: []
      tags:
      - permission
    get:
      consumes:
      - application/json
      description: Get a permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.PermissionResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - permission
    patch:
      consumes:
      - application/json
      description: Update a permission
      parameters:
      - description: Permission update request
        in: body
        name: permissionUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/dto.PermissionUpdateRequest'
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.PermissionResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - permission
  /role/{id}/permissions:
    delete:
      consumes:
      - application/json
      description: Remove permissions from role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role remove permissions request
        in: body
        name: roleRemovePermissionsRequest
        required: true
        schema:
          $ref: '#/definitions/dto.RoleRemovePermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JSONResult'
      security:
      - ApiKeyAuth: []
      tags:
      - role
    post:
      consumes:
      - application/json
      description: Add permissions to role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role add permissions request
        in: body
        name: roleAddPermissionsRequest
        required: true
        schema:
          $ref: '#/definitions/dto.RoleAddPermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JSONResult'
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /roles:
    get:
      consumes:
      - application/json
      description: List of roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RoleResponse'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - role
    post:
      consumes:
      - application/json
      description: Create a role
      parameters:
      - description: Role store request
        in: body
        name: roleStoreRequest
        required: true
        schema:
          $ref: '#/definitions/dto.RoleStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.RoleResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JSONResult'
      security:
      - ApiKeyAuth: []
      tags:
      - role
    get:
      consumes:
      - application/json
      description: Get a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.RoleResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - role
    patch:
      consumes:
      - application/json
      description: Update a role
      parameters:
      - description: Role update request
        in: body
        name: roleUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/dto.RoleUpdateRequest'
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.PermissionResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /users:
    get:
      consumes:
      - application/json
      description: List of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserResponse'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User store request
        in: body
        name: userStoreRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UserStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
      tags:
      - user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JSONResult'
      security:
      - ApiKeyAuth: []
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update password a user
      parameters:
      - description: User update password request
        in: body
        name: userUpdatePasswordRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdatePasswordRequest'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
